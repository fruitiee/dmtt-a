import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

# --------------------
# Dataset
# --------------------
data = pd.DataFrame({
    'Amount': [100, 250, 300, 50, 500, 450, 120, 80, 700, 60],
    'TransactionTime': [5, 4, 8, 2, 20, 18, 7, 3, 22, 1],
    'Age': [25, 45, 30, 22, 50, 40, 28, 24, 55, 20],
    'Class': [0, 0, 1, 0, 1, 1, 0, 0, 1, 0]   # 0 = No Fraud, 1 = Fraud
})

# Features & Target
X = data[['Amount', 'TransactionTime', 'Age']]
y = data['Class']

# Split into training & testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train Logistic Regression
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# --------------------
# User Input
# --------------------
amount = float(input("Enter Transaction Amount: "))
time = float(input("Enter Transaction Time (0â€“24 hrs): "))
age = int(input("Enter Customer Age: "))

# Prediction
prediction = model.predict([[amount, time, age]])[0]

# --------------------
# Result
# --------------------
print("Result: Fraud" if prediction == 1 else "Result: Not Fraud")

